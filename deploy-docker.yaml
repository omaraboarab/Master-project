---

- name: install docker and compose
  hosts: docker_server
  become: yes
  tasks:
    - name : install docker
      yum:
        name: docker
        update_cache: yes
        state : present

- name : start docker
  hosts: docker_server
  become: yes
  tasks:
    - name : start docker
      systemd:
        name : docker
        state : started
    - name: add ec2-user to dockerGroup
      user:
        name: ec2-user
        groups: docker
        append : yes
    - name : reconnect to the server session
      meta : reset_connection


    - name: Pull the Docker image from Docker Hub
      docker_image:
        name: omaraboarab/jenkinsproj:1.0
        source: pull

    - name: Run the Docker container
      docker_container:
        name: jenkins
        image: omaraboarab/jenkinsproj:1.0
        state: started
        ports:
          - "8080:8080"         
        restart_policy: always

    - name : install Docker compose
      get_url:
        url: https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: +x

    # - name: Pull the Jenkins Docker image
    #   docker_image:
    #     name: jenkins/jenkins:lts
    #     source: pull

    # - name: Run the Jenkins container
    #   docker_container:
    #     name: jenkins
    #     image: jenkins/jenkins:lts
    #     state: started
    #     restart_policy: always
    #     ports:
    #       - "8080:8080"       
    #       - "50000:50000"     
    #     volumes:
    #       - jenkins_home:/var/jenkins_home 

    # - name: Create Docker volume for Jenkins data
    #   docker_volume:
    #     name: jenkins_home
    #     state: present

        
# - name : docker pull nginx
#   hosts : docker_server
#   tasks :
#     - docker_image:
#         name: nginx
#         source: pull

# - name : copy app to ec2
#   hosts : docker_server
#   tasks :
#     - name : copy app
#       copy : 
#         src: ./docker-compose.yaml
#         dest : /home/ec2-user

    # - name: copy files
    #   copy:
    #     src: ./app
    #     dest : /home/ec2-user

    #- name : start docker compose file
      # docker_container :
      #   name : nginx
      #   image : nginx
      #   state : started

    # - name : run app
    #   docker_container :
    #     name :  myapp
    #     image : omaraboarab/jenkinspro
    #     state : started
        
    # - name: Deploy Docker Compose
    #  command : docker-compose -f docker-compose.yaml up -d

  
    # - name: Install Java
    #   ansible.builtin.apt:
    #     name: default-jdk
    #     state: present

    # - name: Add Jenkins repository key
    #   ansible.builtin.apt_key:
    #     url: https://pkg.jenkins.io/debian/jenkins.io.key
    #     state: present

    # - name: Add Jenkins repository
    #   ansible.builtin.apt_repository:
    #     repo: deb https://pkg.jenkins.io/debian-stable binary/
    #     state: present

    # - name: Install Jenkins
    #   ansible.builtin.apt:
    #     name: jenkins
    #     state: present
    #     update_cache: true

    # - name: Start and enable Jenkins
    #   ansible.builtin.service:
    #     name: jenkins
    #     state: started
    #     enabled: true



    # - name: Install Python 3 (using raw module)
    #   raw: sudo yum install -y python3

    # - name: Create symlink for Python (if needed)
    #   raw: sudo ln -s /usr/bin/python3 /usr/bin/python || true

    # - name: Install pip3
    #   raw: sudo yum install -y python3-pip

    # - name: Install Java
    #   yum:
    #     name: java-1.8.0-openjdk-devel
    #     state: present

    # - name: Add Jenkins repository
    #   yum_repository:
    #     name: jenkins
    #     description: Jenkins
    #     baseurl: https://pkg.jenkins.io/redhat-stable/
    #     gpgcheck: yes
    #     enabled: yes
    #     gpgkey: https://pkg.jenkins.io/redhat/jenkins.io.key

    # - name: Install Jenkins
    #   yum:
    #     name: jenkins
    #     state: present

    # - name: Start and enable Jenkins
    #   systemd:
    #     name: jenkins
    #     state: started
    #     enabled: yes


    # - name: Download Jenkins repository file
    #   get_url:
    #     url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
    #     dest: /etc/yum.repos.d/jenkins.repo
    #   become: true

    # - name: Import Jenkins-CI key
    #   shell: rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
    #   become: true

    # - name: Install Java
    #   yum:
    #     name: java-17-amazon-corretto-devel
    #     state: present
    #   become: true

    # - name: Install Jenkins
    #   yum:
    #     name: jenkins
    #     state: present
    #   become: true

    # - name: Start Jenkins service
    #   service:
    #     name: jenkins
    #     state: started
    #   become: true
    

    # - name: Pull the Jenkins Docker image
    #   docker_image:
    #     name: jenkins/jenkins:lts
    #     source: pull

    # - name: Run the Jenkins container
    #   docker_container:
    #     name: jenkins
    #     image: jenkins/jenkins:lts
    #     state: started
    #     restart_policy: always
    #     ports:
    #       - "8080:8080"       
    #       - "50000:50000"     
    #     volumes:
    #       - jenkins_home:/var/jenkins_home 
    # - name: Install Python3 and pip
    #   yum:
    #     name:
    #       - python3
    #       - python3-pip
    #     state: present

    # - name: Install requests library
    #   pip:
    #     name: requests
    #     state: present
    #     executable: pip3

    # - name: Pull Jenkins Docker image
    #   docker_image:
    #     name: jenkins/jenkins:lts
    #     tag: lts
    #     pull: yes

    # - name: Run Jenkins container
    #   docker_container:
    #     name: jenkins
    #     image: jenkins/jenkins:lts
    #     state: started
    #     restart_policy: unless-stopped
    #     published_ports:
    #       - "8080:8080"
    #       - "50000:50000"
    # - name: Pull Jenkins Docker image
    #   docker_image:
    #     name: jenkins/jenkins
    #     tag: lts
    #     source: pull

    # # Step 8: Create Jenkins container
    # - name: Create and run Jenkins container
    #   docker_container:
    #     name: jenkins
    #     image: jenkins/jenkins:lts
    #     state: started
    #     restart_policy: on-failure
    #     ports:
    #       - "8080:8080"
    #       - "50000:50000"

    


    # - name: Pull Jenkins Docker image (lts-jdk17)
    #   docker_image:
    #     name: jenkins/jenkins
    #     tag: lts-jdk17
    #     source: pull

    # # Task 4: Create and run Jenkins container with Docker control
    # - name: Create and run Jenkins container with Docker control
    #   docker_container:
    #     name: jenkins
    #     image: jenkins/jenkins:lts-jdk17
    #     state: started
    #     restart_policy: on-failure
    #     ports:
    #       - "8080:8080"
    #       - "50000:50000"
    #     volumes:
    #       - jenkins_home:/var/jenkins_home
    #       - /var/run/docker.sock:/var/run/docker.sock
    #       - "{{ lookup('pipe', 'which docker') }}:/usr/bin/docker"
    # #     env:
    # #       JENKINS_OPTS: "--argumentRealm --plugin=cloudbees-folder:6.15"

